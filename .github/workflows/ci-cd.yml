name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Triggers on pushes to main branch
  pull_request:
    branches:
      - main # Triggers on pull requests targeting main
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm # Cache location
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Prepare SQLite database
      - name: Prepare SQLite database
        run: |
          touch database.sqlite
          npx sequelize-cli db:migrate --config=config/config.json

      # Step 6: Run linting
      - name: Run ESLint
        run: npx eslint .

      # Step 7: Run tests
      - name: Run tests
        run: npm test

  deploy-staging:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start Codespace
        run: |
          echo "Starting Codespace..."
          gh codespace create -r ${{ github.repository }} -b main
          CODESPACE_NAME=$(gh codespace list --json name --limit 1 | jq -r '.[0].name')
          echo "Codespace started: $CODESPACE_NAME"
          echo "CODESPACE_NAME=$CODESPACE_NAME" >> $GITHUB_ENV

      - name: Deploy to Staging on Codespaces
        run: |
          gh codespace ssh -c "cd /workspaces/${{ github.repository }} && ./deploy.sh staging"

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to production (manual approval)
        if: ${{ github.event_name == 'workflow_dispatch' }} # Ensures production deployment requires manual trigger
        run: |
          gh codespace ssh -c "cd /workspaces/${{ github.repository }} && ./deploy.sh production"
